{"filter":false,"title":"app.py","tooltip":"/CCS6344_Group19_OnlineBookStoreAWS-main/bookstore/app.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"insert","lines":["a"],"id":18},{"start":{"row":4,"column":1},"end":{"row":4,"column":2},"action":"insert","lines":["p"]},{"start":{"row":4,"column":2},"end":{"row":4,"column":3},"action":"insert","lines":["p"]}],[{"start":{"row":4,"column":3},"end":{"row":4,"column":4},"action":"insert","lines":[" "],"id":19},{"start":{"row":4,"column":4},"end":{"row":4,"column":5},"action":"insert","lines":["="]}],[{"start":{"row":4,"column":5},"end":{"row":4,"column":6},"action":"insert","lines":[" "],"id":20},{"start":{"row":4,"column":6},"end":{"row":4,"column":7},"action":"insert","lines":["F"]},{"start":{"row":4,"column":7},"end":{"row":4,"column":8},"action":"insert","lines":["l"]},{"start":{"row":4,"column":8},"end":{"row":4,"column":9},"action":"insert","lines":["a"]}],[{"start":{"row":4,"column":9},"end":{"row":4,"column":10},"action":"insert","lines":["s"],"id":21},{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"insert","lines":["k"]}],[{"start":{"row":4,"column":11},"end":{"row":4,"column":13},"action":"insert","lines":["()"],"id":22}],[{"start":{"row":4,"column":12},"end":{"row":4,"column":13},"action":"insert","lines":["_"],"id":23},{"start":{"row":4,"column":13},"end":{"row":4,"column":14},"action":"insert","lines":["_"]},{"start":{"row":4,"column":14},"end":{"row":4,"column":15},"action":"insert","lines":["n"]},{"start":{"row":4,"column":15},"end":{"row":4,"column":16},"action":"insert","lines":["a"]},{"start":{"row":4,"column":16},"end":{"row":4,"column":17},"action":"insert","lines":["m"]}],[{"start":{"row":4,"column":17},"end":{"row":4,"column":18},"action":"insert","lines":["e"],"id":24},{"start":{"row":4,"column":18},"end":{"row":4,"column":19},"action":"insert","lines":["_"]},{"start":{"row":4,"column":19},"end":{"row":4,"column":20},"action":"insert","lines":["_"]}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":25},{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":["@"]}],[{"start":{"row":6,"column":1},"end":{"row":6,"column":2},"action":"insert","lines":["a"],"id":26},{"start":{"row":6,"column":2},"end":{"row":6,"column":3},"action":"insert","lines":["p"]},{"start":{"row":6,"column":3},"end":{"row":6,"column":4},"action":"insert","lines":["p"]},{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"insert","lines":["."]}],[{"start":{"row":6,"column":5},"end":{"row":6,"column":6},"action":"insert","lines":["r"],"id":27},{"start":{"row":6,"column":6},"end":{"row":6,"column":7},"action":"insert","lines":["o"]},{"start":{"row":6,"column":7},"end":{"row":6,"column":8},"action":"insert","lines":["u"]},{"start":{"row":6,"column":8},"end":{"row":6,"column":9},"action":"insert","lines":["t"]},{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"insert","lines":["e"]}],[{"start":{"row":6,"column":10},"end":{"row":6,"column":12},"action":"insert","lines":["()"],"id":28}],[{"start":{"row":6,"column":11},"end":{"row":6,"column":13},"action":"insert","lines":["''"],"id":29}],[{"start":{"row":6,"column":12},"end":{"row":6,"column":13},"action":"insert","lines":["/"],"id":30}],[{"start":{"row":6,"column":15},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":31},{"start":{"row":7,"column":0},"end":{"row":7,"column":1},"action":"insert","lines":["d"]},{"start":{"row":7,"column":1},"end":{"row":7,"column":2},"action":"insert","lines":["e"]}],[{"start":{"row":7,"column":2},"end":{"row":7,"column":3},"action":"insert","lines":["f"],"id":32}],[{"start":{"row":7,"column":3},"end":{"row":7,"column":4},"action":"insert","lines":[" "],"id":33},{"start":{"row":7,"column":4},"end":{"row":7,"column":5},"action":"insert","lines":["h"]},{"start":{"row":7,"column":5},"end":{"row":7,"column":6},"action":"insert","lines":["e"]},{"start":{"row":7,"column":6},"end":{"row":7,"column":7},"action":"insert","lines":["l"]},{"start":{"row":7,"column":7},"end":{"row":7,"column":8},"action":"insert","lines":["l"]},{"start":{"row":7,"column":8},"end":{"row":7,"column":9},"action":"insert","lines":["o"]}],[{"start":{"row":7,"column":9},"end":{"row":7,"column":10},"action":"insert","lines":["_"],"id":34},{"start":{"row":7,"column":10},"end":{"row":7,"column":11},"action":"insert","lines":["w"]},{"start":{"row":7,"column":11},"end":{"row":7,"column":12},"action":"insert","lines":["o"]},{"start":{"row":7,"column":12},"end":{"row":7,"column":13},"action":"insert","lines":["r"]},{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"insert","lines":["l"]}],[{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"insert","lines":["d"],"id":35}],[{"start":{"row":7,"column":15},"end":{"row":7,"column":17},"action":"insert","lines":["()"],"id":36}],[{"start":{"row":7,"column":17},"end":{"row":7,"column":18},"action":"insert","lines":[":"],"id":37}],[{"start":{"row":7,"column":18},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":38},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":8,"column":4},"end":{"row":8,"column":5},"action":"insert","lines":["r"],"id":39},{"start":{"row":8,"column":5},"end":{"row":8,"column":6},"action":"insert","lines":["e"]},{"start":{"row":8,"column":6},"end":{"row":8,"column":7},"action":"insert","lines":["t"]},{"start":{"row":8,"column":7},"end":{"row":8,"column":8},"action":"insert","lines":["u"]},{"start":{"row":8,"column":8},"end":{"row":8,"column":9},"action":"insert","lines":["r"]},{"start":{"row":8,"column":9},"end":{"row":8,"column":10},"action":"insert","lines":["n"]}],[{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"insert","lines":[" "],"id":40},{"start":{"row":8,"column":11},"end":{"row":8,"column":12},"action":"insert","lines":["r"]}],[{"start":{"row":8,"column":12},"end":{"row":8,"column":13},"action":"insert","lines":["e"],"id":41},{"start":{"row":8,"column":13},"end":{"row":8,"column":14},"action":"insert","lines":["n"]},{"start":{"row":8,"column":14},"end":{"row":8,"column":15},"action":"insert","lines":["d"]}],[{"start":{"row":8,"column":11},"end":{"row":8,"column":15},"action":"remove","lines":["rend"],"id":42},{"start":{"row":8,"column":11},"end":{"row":8,"column":26},"action":"insert","lines":["render_template"]}],[{"start":{"row":8,"column":26},"end":{"row":8,"column":28},"action":"insert","lines":["()"],"id":43}],[{"start":{"row":8,"column":27},"end":{"row":8,"column":29},"action":"insert","lines":["''"],"id":44}],[{"start":{"row":8,"column":28},"end":{"row":8,"column":29},"action":"insert","lines":["i"],"id":45},{"start":{"row":8,"column":29},"end":{"row":8,"column":30},"action":"insert","lines":["n"]}],[{"start":{"row":8,"column":30},"end":{"row":8,"column":31},"action":"insert","lines":["d"],"id":46},{"start":{"row":8,"column":31},"end":{"row":8,"column":32},"action":"insert","lines":["e"]},{"start":{"row":8,"column":32},"end":{"row":8,"column":33},"action":"insert","lines":["x"]},{"start":{"row":8,"column":33},"end":{"row":8,"column":34},"action":"insert","lines":["."]},{"start":{"row":8,"column":34},"end":{"row":8,"column":35},"action":"insert","lines":["h"]},{"start":{"row":8,"column":35},"end":{"row":8,"column":36},"action":"insert","lines":["t"]},{"start":{"row":8,"column":36},"end":{"row":8,"column":37},"action":"insert","lines":["m"]}],[{"start":{"row":8,"column":37},"end":{"row":8,"column":38},"action":"insert","lines":["l"],"id":47}],[{"start":{"row":8,"column":40},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":48},{"start":{"row":9,"column":0},"end":{"row":9,"column":4},"action":"insert","lines":["    "]},{"start":{"row":9,"column":4},"end":{"row":10,"column":0},"action":"insert","lines":["",""]},{"start":{"row":10,"column":0},"end":{"row":10,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":12,"column":31},"end":{"row":12,"column":32},"action":"remove","lines":["3"],"id":49},{"start":{"row":12,"column":30},"end":{"row":12,"column":31},"action":"remove","lines":["3"]},{"start":{"row":12,"column":29},"end":{"row":12,"column":30},"action":"remove","lines":["4"]},{"start":{"row":12,"column":28},"end":{"row":12,"column":29},"action":"remove","lines":["1"]}],[{"start":{"row":12,"column":28},"end":{"row":12,"column":29},"action":"insert","lines":["3"],"id":50},{"start":{"row":12,"column":29},"end":{"row":12,"column":30},"action":"insert","lines":["0"]},{"start":{"row":12,"column":30},"end":{"row":12,"column":31},"action":"insert","lines":["0"]},{"start":{"row":12,"column":31},"end":{"row":12,"column":32},"action":"insert","lines":["0"]}],[{"start":{"row":12,"column":32},"end":{"row":12,"column":33},"action":"insert","lines":[","],"id":51},{"start":{"row":12,"column":33},"end":{"row":12,"column":34},"action":"insert","lines":["h"]},{"start":{"row":12,"column":34},"end":{"row":12,"column":35},"action":"insert","lines":["o"]}],[{"start":{"row":12,"column":35},"end":{"row":12,"column":36},"action":"insert","lines":["s"],"id":52},{"start":{"row":12,"column":36},"end":{"row":12,"column":37},"action":"insert","lines":["t"]}],[{"start":{"row":12,"column":37},"end":{"row":12,"column":38},"action":"insert","lines":["="],"id":53}],[{"start":{"row":12,"column":38},"end":{"row":12,"column":40},"action":"insert","lines":["''"],"id":54}],[{"start":{"row":12,"column":39},"end":{"row":12,"column":40},"action":"insert","lines":["0"],"id":55},{"start":{"row":12,"column":40},"end":{"row":12,"column":41},"action":"insert","lines":["."]},{"start":{"row":12,"column":41},"end":{"row":12,"column":42},"action":"insert","lines":["0"]},{"start":{"row":12,"column":42},"end":{"row":12,"column":43},"action":"insert","lines":["."]},{"start":{"row":12,"column":43},"end":{"row":12,"column":44},"action":"insert","lines":["0"]},{"start":{"row":12,"column":44},"end":{"row":12,"column":45},"action":"insert","lines":["."]},{"start":{"row":12,"column":45},"end":{"row":12,"column":46},"action":"insert","lines":["0"]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["/"],"id":56},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["/"],"id":57},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["/"]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["/"],"id":58},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["/"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["*"]}],[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"remove","lines":["*"],"id":59},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["/"]},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["/"]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["*"],"id":60},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["*"]}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["*"],"id":61},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["*"]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["*"],"id":62},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["/"],"id":63},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["*"]}],[{"start":{"row":0,"column":24},"end":{"row":0,"column":25},"action":"remove","lines":["p"],"id":64},{"start":{"row":0,"column":23},"end":{"row":0,"column":24},"action":"remove","lines":["p"]},{"start":{"row":0,"column":22},"end":{"row":0,"column":23},"action":"remove","lines":["a"]},{"start":{"row":0,"column":21},"end":{"row":0,"column":22},"action":"remove","lines":[" "]},{"start":{"row":0,"column":20},"end":{"row":0,"column":21},"action":"remove","lines":["t"]},{"start":{"row":0,"column":19},"end":{"row":0,"column":20},"action":"remove","lines":["r"]},{"start":{"row":0,"column":18},"end":{"row":0,"column":19},"action":"remove","lines":["o"]},{"start":{"row":0,"column":17},"end":{"row":0,"column":18},"action":"remove","lines":["p"]},{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"remove","lines":["m"]},{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"remove","lines":["i"]},{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"remove","lines":[" "]},{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"remove","lines":["e"]},{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"remove","lines":["r"]},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"remove","lines":["o"]},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"remove","lines":["t"]},{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"remove","lines":["s"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"remove","lines":["k"]},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"remove","lines":["o"]},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"remove","lines":["o"]},{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"remove","lines":["b"]},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"remove","lines":[" "]},{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"remove","lines":["m"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"remove","lines":["o"]}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["r"],"id":65},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":["f"]}],[{"start":{"row":12,"column":31},"end":{"row":12,"column":32},"action":"remove","lines":["0"],"id":66},{"start":{"row":12,"column":30},"end":{"row":12,"column":31},"action":"remove","lines":["0"]},{"start":{"row":12,"column":29},"end":{"row":12,"column":30},"action":"remove","lines":["0"]},{"start":{"row":12,"column":28},"end":{"row":12,"column":29},"action":"remove","lines":["3"]}],[{"start":{"row":12,"column":28},"end":{"row":12,"column":29},"action":"insert","lines":["2"],"id":67},{"start":{"row":12,"column":29},"end":{"row":12,"column":30},"action":"insert","lines":["2"]}],[{"start":{"row":12,"column":29},"end":{"row":12,"column":30},"action":"remove","lines":["2"],"id":68},{"start":{"row":12,"column":28},"end":{"row":12,"column":29},"action":"remove","lines":["2"]}],[{"start":{"row":12,"column":28},"end":{"row":12,"column":29},"action":"insert","lines":["3"],"id":69},{"start":{"row":12,"column":29},"end":{"row":12,"column":30},"action":"insert","lines":["0"]},{"start":{"row":12,"column":30},"end":{"row":12,"column":31},"action":"insert","lines":["0"]},{"start":{"row":12,"column":31},"end":{"row":12,"column":32},"action":"insert","lines":["0"]}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":["f"],"id":70},{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"insert","lines":["r"]},{"start":{"row":2,"column":2},"end":{"row":2,"column":3},"action":"insert","lines":["o"]}],[{"start":{"row":2,"column":3},"end":{"row":2,"column":4},"action":"insert","lines":["m"],"id":71}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"insert","lines":[" "],"id":72},{"start":{"row":2,"column":5},"end":{"row":2,"column":6},"action":"insert","lines":["j"]},{"start":{"row":2,"column":6},"end":{"row":2,"column":7},"action":"insert","lines":["i"]}],[{"start":{"row":2,"column":7},"end":{"row":2,"column":8},"action":"insert","lines":["n"],"id":73},{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["j"]},{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":["a"]},{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["2"]}],[{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["."],"id":74},{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["u"]}],[{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["t"],"id":75},{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["i"]},{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["l"]},{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":["s"]}],[{"start":{"row":2,"column":17},"end":{"row":2,"column":18},"action":"insert","lines":[" "],"id":76},{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"insert","lines":["i"]},{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"insert","lines":["m"]},{"start":{"row":2,"column":20},"end":{"row":2,"column":21},"action":"insert","lines":["p"]},{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"insert","lines":["o"]}],[{"start":{"row":2,"column":22},"end":{"row":2,"column":23},"action":"insert","lines":["r"],"id":77},{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"insert","lines":["t"]}],[{"start":{"row":2,"column":24},"end":{"row":2,"column":25},"action":"insert","lines":[" "],"id":78},{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"insert","lines":["m"]},{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"insert","lines":["a"]},{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"insert","lines":["r"]}],[{"start":{"row":2,"column":28},"end":{"row":2,"column":29},"action":"insert","lines":["k"],"id":79},{"start":{"row":2,"column":29},"end":{"row":2,"column":30},"action":"insert","lines":["u"]}],[{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"insert","lines":["p"],"id":80},{"start":{"row":2,"column":31},"end":{"row":2,"column":32},"action":"insert","lines":["s"]},{"start":{"row":2,"column":32},"end":{"row":2,"column":33},"action":"insert","lines":["a"]},{"start":{"row":2,"column":33},"end":{"row":2,"column":34},"action":"insert","lines":["f"]},{"start":{"row":2,"column":34},"end":{"row":2,"column":35},"action":"insert","lines":["e"]}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":81},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""]},{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""]},{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""]},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":6,"column":0},"end":{"row":27,"column":26},"action":"insert","lines":["# Database connection details","endpoint = \"bookstoredatabase.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"bookstoredatabase\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","def get_db_version():","    connection = pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT VERSION()\")","            result = cursor.fetchone()","            return result[0]","    finally:","        connection.close()"],"id":82}],[{"start":{"row":29,"column":0},"end":{"row":30,"column":0},"action":"remove","lines":["",""],"id":83}],[{"start":{"row":7,"column":12},"end":{"row":7,"column":70},"action":"remove","lines":["bookstoredatabase.c4v5xzujhxv5.us-east-1.rds.amazonaws.com"],"id":84},{"start":{"row":7,"column":12},"end":{"row":7,"column":65},"action":"insert","lines":["obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com"]}],[{"start":{"row":9,"column":26},"end":{"row":9,"column":27},"action":"remove","lines":["e"],"id":85},{"start":{"row":9,"column":25},"end":{"row":9,"column":26},"action":"remove","lines":["s"]},{"start":{"row":9,"column":24},"end":{"row":9,"column":25},"action":"remove","lines":["a"]},{"start":{"row":9,"column":23},"end":{"row":9,"column":24},"action":"remove","lines":["b"]},{"start":{"row":9,"column":22},"end":{"row":9,"column":23},"action":"remove","lines":["a"]},{"start":{"row":9,"column":21},"end":{"row":9,"column":22},"action":"remove","lines":["t"]},{"start":{"row":9,"column":20},"end":{"row":9,"column":21},"action":"remove","lines":["a"]},{"start":{"row":9,"column":19},"end":{"row":9,"column":20},"action":"remove","lines":["d"]},{"start":{"row":9,"column":18},"end":{"row":9,"column":19},"action":"remove","lines":["e"]},{"start":{"row":9,"column":17},"end":{"row":9,"column":18},"action":"remove","lines":["r"]},{"start":{"row":9,"column":16},"end":{"row":9,"column":17},"action":"remove","lines":["o"]},{"start":{"row":9,"column":15},"end":{"row":9,"column":16},"action":"remove","lines":["t"]},{"start":{"row":9,"column":14},"end":{"row":9,"column":15},"action":"remove","lines":["s"]},{"start":{"row":9,"column":13},"end":{"row":9,"column":14},"action":"remove","lines":["k"]},{"start":{"row":9,"column":12},"end":{"row":9,"column":13},"action":"remove","lines":["o"]},{"start":{"row":9,"column":11},"end":{"row":9,"column":12},"action":"remove","lines":["o"]}],[{"start":{"row":9,"column":10},"end":{"row":9,"column":11},"action":"remove","lines":["b"],"id":86}],[{"start":{"row":9,"column":10},"end":{"row":10,"column":12},"action":"insert","lines":["","obs-database"],"id":87}],[{"start":{"row":9,"column":10},"end":{"row":10,"column":0},"action":"remove","lines":["",""],"id":88}],[{"start":{"row":7,"column":0},"end":{"row":11,"column":24},"action":"remove","lines":["endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"obs-database\"","username = \"admin\"","password = \"Pa$$w0rd123\""],"id":89},{"start":{"row":7,"column":0},"end":{"row":13,"column":17},"action":"insert","lines":["endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"  # Updated database name","username = \"admin\"","password = \"Pa$$w0rd123\"","","connection = None"]}],[{"start":{"row":2,"column":35},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":90},{"start":{"row":3,"column":0},"end":{"row":3,"column":1},"action":"insert","lines":["f"]}],[{"start":{"row":3,"column":1},"end":{"row":3,"column":2},"action":"insert","lines":["r"],"id":91},{"start":{"row":3,"column":2},"end":{"row":3,"column":3},"action":"insert","lines":["o"]},{"start":{"row":3,"column":3},"end":{"row":3,"column":4},"action":"insert","lines":["m"]}],[{"start":{"row":3,"column":4},"end":{"row":3,"column":5},"action":"insert","lines":[" "],"id":92},{"start":{"row":3,"column":5},"end":{"row":3,"column":6},"action":"insert","lines":["b"]}],[{"start":{"row":3,"column":6},"end":{"row":3,"column":7},"action":"insert","lines":["o"],"id":93},{"start":{"row":3,"column":7},"end":{"row":3,"column":8},"action":"insert","lines":["o"]},{"start":{"row":3,"column":8},"end":{"row":3,"column":9},"action":"insert","lines":["k"]},{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"insert","lines":["s"]},{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"insert","lines":["t"]},{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"insert","lines":["o"]}],[{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"insert","lines":["r"],"id":94},{"start":{"row":3,"column":13},"end":{"row":3,"column":14},"action":"insert","lines":["e"]}],[{"start":{"row":3,"column":14},"end":{"row":3,"column":15},"action":"insert","lines":[" "],"id":95},{"start":{"row":3,"column":15},"end":{"row":3,"column":16},"action":"insert","lines":["i"]},{"start":{"row":3,"column":16},"end":{"row":3,"column":17},"action":"insert","lines":["m"]},{"start":{"row":3,"column":17},"end":{"row":3,"column":18},"action":"insert","lines":["p"]},{"start":{"row":3,"column":18},"end":{"row":3,"column":19},"action":"insert","lines":["o"]},{"start":{"row":3,"column":19},"end":{"row":3,"column":20},"action":"insert","lines":["r"]},{"start":{"row":3,"column":20},"end":{"row":3,"column":21},"action":"insert","lines":["t"]}],[{"start":{"row":3,"column":21},"end":{"row":3,"column":22},"action":"insert","lines":[" "],"id":96},{"start":{"row":3,"column":22},"end":{"row":3,"column":23},"action":"insert","lines":["a"]},{"start":{"row":3,"column":23},"end":{"row":3,"column":24},"action":"insert","lines":["p"]},{"start":{"row":3,"column":24},"end":{"row":3,"column":25},"action":"insert","lines":["p"]}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["from bookstore import app",""],"id":98}],[{"start":{"row":34,"column":14},"end":{"row":34,"column":15},"action":"remove","lines":["d"],"id":99},{"start":{"row":34,"column":13},"end":{"row":34,"column":14},"action":"remove","lines":["l"]},{"start":{"row":34,"column":12},"end":{"row":34,"column":13},"action":"remove","lines":["r"]},{"start":{"row":34,"column":11},"end":{"row":34,"column":12},"action":"remove","lines":["o"]},{"start":{"row":34,"column":10},"end":{"row":34,"column":11},"action":"remove","lines":["w"]},{"start":{"row":34,"column":9},"end":{"row":34,"column":10},"action":"remove","lines":["_"]},{"start":{"row":34,"column":8},"end":{"row":34,"column":9},"action":"remove","lines":["o"]},{"start":{"row":34,"column":7},"end":{"row":34,"column":8},"action":"remove","lines":["l"]},{"start":{"row":34,"column":6},"end":{"row":34,"column":7},"action":"remove","lines":["l"]},{"start":{"row":34,"column":5},"end":{"row":34,"column":6},"action":"remove","lines":["e"]}],[{"start":{"row":34,"column":5},"end":{"row":34,"column":6},"action":"insert","lines":["o"],"id":100},{"start":{"row":34,"column":6},"end":{"row":34,"column":7},"action":"insert","lines":["m"]},{"start":{"row":34,"column":7},"end":{"row":34,"column":8},"action":"insert","lines":["e"]},{"start":{"row":34,"column":8},"end":{"row":34,"column":9},"action":"insert","lines":["_"]}],[{"start":{"row":34,"column":9},"end":{"row":34,"column":10},"action":"insert","lines":["p"],"id":101},{"start":{"row":34,"column":10},"end":{"row":34,"column":11},"action":"insert","lines":["a"]},{"start":{"row":34,"column":11},"end":{"row":34,"column":12},"action":"insert","lines":["g"]},{"start":{"row":34,"column":12},"end":{"row":34,"column":13},"action":"insert","lines":["e"]}],[{"start":{"row":0,"column":0},"end":{"row":39,"column":48},"action":"remove","lines":["","from flask import Flask, render_template","from jinja2.utils import markupsafe","","app = Flask(__name__)","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"  # Updated database name","username = \"admin\"","password = \"Pa$$w0rd123\"","","connection = None","","def get_db_version():","    connection = pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT VERSION()\")","            result = cursor.fetchone()","            return result[0]","    finally:","        connection.close()","","","","@app.route('/')","def home_page():","    return render_template('index.html')","    ","    ","if __name__=='__main__':","    app.run(debug=True,port=3000,host='0.0.0.0')"],"id":103},{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["from flask import Flask, render_template, request, redirect, url_for","import pymysql","","app = Flask(__name__)","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"  # Updated database name","username = \"admin\"","password = \"Pa$$w0rd123\"","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM books\")","            books = cursor.fetchall()","        return render_template('index.html', books=books)","    finally:","        connection.close()","","@app.route('/add', methods=['POST'])","def add_book():","    title = request.form['title']","    author = request.form['author']","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO books (title, author) VALUES (%s, %s)\", (title, author))","        connection.commit()","    finally:","        connection.close()","    return redirect(url_for('index'))","","@app.route('/delete/<int:book_id>')","def delete_book(book_id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM books WHERE id = %s\", (book_id,))","        connection.commit()","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""]}],[{"start":{"row":39,"column":44},"end":{"row":39,"column":45},"action":"remove","lines":["s"],"id":104}],[{"start":{"row":50,"column":44},"end":{"row":50,"column":45},"action":"remove","lines":["s"],"id":105}],[{"start":{"row":26,"column":46},"end":{"row":26,"column":47},"action":"remove","lines":["s"],"id":106}],[{"start":{"row":28,"column":49},"end":{"row":28,"column":50},"action":"remove","lines":["s"],"id":107}],[{"start":{"row":28,"column":54},"end":{"row":28,"column":55},"action":"remove","lines":["s"],"id":108}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":17},"action":"remove","lines":["s"],"id":109}],[{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"remove","lines":["from flask import Flask, render_template, request, redirect, url_for","import pymysql","","app = Flask(__name__)","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"  # Updated database name","username = \"admin\"","password = \"Pa$$w0rd123\"","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            book = cursor.fetchall()","        return render_template('index.html', book=book)","    finally:","        connection.close()","","@app.route('/add', methods=['POST'])","def add_book():","    title = request.form['title']","    author = request.form['author']","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (title, author) VALUES (%s, %s)\", (title, author))","        connection.commit()","    finally:","        connection.close()","    return redirect(url_for('index'))","","@app.route('/delete/<int:book_id>')","def delete_book(book_id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (book_id,))","        connection.commit()","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""],"id":110},{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["from flask import Flask, render_template, request, redirect, url_for","import pymysql","","app = Flask(__name__)","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price) VALUES (%s, %s)\", (name, price))","            connection.commit()","    finally:","        connection.close()","    return redirect(url_for('index'))","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""]}],[{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"remove","lines":["from flask import Flask, render_template, request, redirect, url_for","import pymysql","","app = Flask(__name__)","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price) VALUES (%s, %s)\", (name, price))","            connection.commit()","    finally:","        connection.close()","    return redirect(url_for('index'))","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""],"id":111},{"start":{"row":0,"column":0},"end":{"row":65,"column":0},"action":"insert","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import pymysql","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price) VALUES (%s, %s)\", (name, price))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","            flash('Book deleted successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error deleting book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""]}],[{"start":{"row":0,"column":0},"end":{"row":65,"column":0},"action":"remove","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import pymysql","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price) VALUES (%s, %s)\", (name, price))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","            flash('Book deleted successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error deleting book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""],"id":112},{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import boto3","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS credentials and S3 bucket name","aws_access_key = 'your_access_key'","aws_secret_access_key = 'your_secret_access_key'","aws_bucket_name = 'my-flask-app-uploads'  # Replace with your S3 bucket name","","s3_client = boto3.client('s3',","                         aws_access_key_id=aws_access_key,","                         aws_secret_access_key=aws_secret_access_key)","","@app.route('/')","def index():","    return render_template('index.html')","","@app.route('/upload', methods=['POST'])","def upload_file():","    if request.method == 'POST':","        file = request.files['file']","        if file:","            filename = secure_filename(file.filename)","            file_path = os.path.join('/tmp', filename)  # Save file locally (optional)","            file.save(file_path)","","            # Upload file to S3","            try:","                response = s3_client.upload_file(file_path, aws_bucket_name, filename)","                flash('File uploaded successfully!', 'success')","","                # Optionally, trigger Lambda function after upload","                # lambda_client = boto3.client('lambda', region_name='your_lambda_region')","                # lambda_client.invoke(FunctionName='UploadToS3', Payload=json.dumps({'bucket': aws_bucket_name, 'key': filename}))","","            except Exception as e:","                flash(f\"Error uploading file: {e}\", 'danger')","","            finally:","                os.remove(file_path)  # Remove file from local storage","","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""]}],[{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"remove","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import boto3","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS credentials and S3 bucket name","aws_access_key = 'your_access_key'","aws_secret_access_key = 'your_secret_access_key'","aws_bucket_name = 'my-flask-app-uploads'  # Replace with your S3 bucket name","","s3_client = boto3.client('s3',","                         aws_access_key_id=aws_access_key,","                         aws_secret_access_key=aws_secret_access_key)","","@app.route('/')","def index():","    return render_template('index.html')","","@app.route('/upload', methods=['POST'])","def upload_file():","    if request.method == 'POST':","        file = request.files['file']","        if file:","            filename = secure_filename(file.filename)","            file_path = os.path.join('/tmp', filename)  # Save file locally (optional)","            file.save(file_path)","","            # Upload file to S3","            try:","                response = s3_client.upload_file(file_path, aws_bucket_name, filename)","                flash('File uploaded successfully!', 'success')","","                # Optionally, trigger Lambda function after upload","                # lambda_client = boto3.client('lambda', region_name='your_lambda_region')","                # lambda_client.invoke(FunctionName='UploadToS3', Payload=json.dumps({'bucket': aws_bucket_name, 'key': filename}))","","            except Exception as e:","                flash(f\"Error uploading file: {e}\", 'danger')","","            finally:","                os.remove(file_path)  # Remove file from local storage","","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""],"id":113},{"start":{"row":0,"column":0},"end":{"row":53,"column":0},"action":"insert","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","from werkzeug.utils import secure_filename","import boto3","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS credentials and S3 bucket name","aws_access_key = 'your_access_key'","aws_secret_access_key = 'your_secret_access_key'","aws_bucket_name = 'my-flask-app-uploads'  # Replace with your S3 bucket name","","s3_client = boto3.client('s3',","                         aws_access_key_id=aws_access_key,","                         aws_secret_access_key=aws_secret_access_key)","","def get_db_connection():","    # Function for database connection (if used)","    return None","","@app.route('/')","def index():","    return render_template('index.html')","","@app.route('/upload', methods=['POST'])","def upload_file():","    if request.method == 'POST':","        file = request.files['file']","        if file:","            filename = secure_filename(file.filename)","            file_path = os.path.join('/tmp', filename)  # Save file locally (optional)","            file.save(file_path)","","            # Upload file to S3","            try:","                response = s3_client.upload_file(file_path, aws_bucket_name, filename)","                flash('File uploaded successfully!', 'success')","","                # Optionally, trigger Lambda function after upload","                # lambda_client = boto3.client('lambda', region_name='your_lambda_region')","                # lambda_client.invoke(FunctionName='UploadToS3', Payload=json.dumps({'bucket': aws_bucket_name, 'key': filename}))","","            except Exception as e:","                flash(f\"Error uploading file: {e}\", 'danger')","","            finally:","                os.remove(file_path)  # Remove file from local storage","","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""]}],[{"start":{"row":0,"column":0},"end":{"row":53,"column":0},"action":"remove","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","from werkzeug.utils import secure_filename","import boto3","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS credentials and S3 bucket name","aws_access_key = 'your_access_key'","aws_secret_access_key = 'your_secret_access_key'","aws_bucket_name = 'my-flask-app-uploads'  # Replace with your S3 bucket name","","s3_client = boto3.client('s3',","                         aws_access_key_id=aws_access_key,","                         aws_secret_access_key=aws_secret_access_key)","","def get_db_connection():","    # Function for database connection (if used)","    return None","","@app.route('/')","def index():","    return render_template('index.html')","","@app.route('/upload', methods=['POST'])","def upload_file():","    if request.method == 'POST':","        file = request.files['file']","        if file:","            filename = secure_filename(file.filename)","            file_path = os.path.join('/tmp', filename)  # Save file locally (optional)","            file.save(file_path)","","            # Upload file to S3","            try:","                response = s3_client.upload_file(file_path, aws_bucket_name, filename)","                flash('File uploaded successfully!', 'success')","","                # Optionally, trigger Lambda function after upload","                # lambda_client = boto3.client('lambda', region_name='your_lambda_region')","                # lambda_client.invoke(FunctionName='UploadToS3', Payload=json.dumps({'bucket': aws_bucket_name, 'key': filename}))","","            except Exception as e:","                flash(f\"Error uploading file: {e}\", 'danger')","","            finally:","                os.remove(file_path)  # Remove file from local storage","","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""],"id":114},{"start":{"row":0,"column":0},"end":{"row":100,"column":0},"action":"insert","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import pymysql","import boto3","from botocore.exceptions import ClientError","from werkzeug.utils import secure_filename","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS S3 details","S3_BUCKET = 'your-s3-bucket-name'","S3_REGION = 'your-s3-region'","S3_ACCESS_KEY = 'your-s3-access-key'","S3_SECRET_KEY = 'your-s3-secret-key'","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","s3 = boto3.client('s3',","                  region_name=S3_REGION,","                  aws_access_key_id=S3_ACCESS_KEY,","                  aws_secret_access_key=S3_SECRET_KEY)","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    image = request.files['image']","","    # Ensure a file is selected","    if image.filename == '':","        flash('No selected file', 'danger')","        return redirect(url_for('index'))","","    # Securely save the file locally","    filename = secure_filename(image.filename)","    image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))","","    # Upload file to S3","    try:","        s3.upload_file(os.path.join(app.config['UPLOAD_FOLDER'], filename), S3_BUCKET, filename)","        flash('File uploaded successfully', 'success')","    except ClientError as e:","        flash(f\"Error uploading file: {e}\", 'danger')","","    # Insert book into database","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price, image_url) VALUES (%s, %s, %s)\", (name, price, filename))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    ","    return redirect(url_for('index'))","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","        flash('Book deleted successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error deleting book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""]}],[{"start":{"row":0,"column":0},"end":{"row":100,"column":0},"action":"remove","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import pymysql","import boto3","from botocore.exceptions import ClientError","from werkzeug.utils import secure_filename","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS S3 details","S3_BUCKET = 'your-s3-bucket-name'","S3_REGION = 'your-s3-region'","S3_ACCESS_KEY = 'your-s3-access-key'","S3_SECRET_KEY = 'your-s3-secret-key'","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","s3 = boto3.client('s3',","                  region_name=S3_REGION,","                  aws_access_key_id=S3_ACCESS_KEY,","                  aws_secret_access_key=S3_SECRET_KEY)","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    image = request.files['image']","","    # Ensure a file is selected","    if image.filename == '':","        flash('No selected file', 'danger')","        return redirect(url_for('index'))","","    # Securely save the file locally","    filename = secure_filename(image.filename)","    image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))","","    # Upload file to S3","    try:","        s3.upload_file(os.path.join(app.config['UPLOAD_FOLDER'], filename), S3_BUCKET, filename)","        flash('File uploaded successfully', 'success')","    except ClientError as e:","        flash(f\"Error uploading file: {e}\", 'danger')","","    # Insert book into database","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price, image_url) VALUES (%s, %s, %s)\", (name, price, filename))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    ","    return redirect(url_for('index'))","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","        flash('Book deleted successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error deleting book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""],"id":115},{"start":{"row":0,"column":0},"end":{"row":100,"column":0},"action":"insert","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import pymysql","import boto3","from botocore.exceptions import ClientError","from werkzeug.utils import secure_filename","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS S3 details","S3_BUCKET = 'your-s3-bucket-name'","S3_REGION = 'your-s3-region'","S3_ACCESS_KEY = 'your-s3-access-key'","S3_SECRET_KEY = 'your-s3-secret-key'","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","s3 = boto3.client('s3',","                  region_name=S3_REGION,","                  aws_access_key_id=S3_ACCESS_KEY,","                  aws_secret_access_key=S3_SECRET_KEY)","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    image = request.files['image']","","    # Ensure a file is selected","    if image.filename == '':","        flash('No selected file', 'danger')","        return redirect(url_for('index'))","","    # Securely save the file locally","    filename = secure_filename(image.filename)","    image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))","","    # Upload file to S3","    try:","        s3.upload_file(os.path.join(app.config['UPLOAD_FOLDER'], filename), S3_BUCKET, filename)","        flash('File uploaded successfully', 'success')","    except ClientError as e:","        flash(f\"Error uploading file: {e}\", 'danger')","","    # Insert book into database","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price, image_url) VALUES (%s, %s, %s)\", (name, price, filename))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    ","    return redirect(url_for('index'))","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","        flash('Book deleted successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error deleting book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""]}],[{"start":{"row":0,"column":0},"end":{"row":100,"column":0},"action":"remove","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import pymysql","import boto3","from botocore.exceptions import ClientError","from werkzeug.utils import secure_filename","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS S3 details","S3_BUCKET = 'your-s3-bucket-name'","S3_REGION = 'your-s3-region'","S3_ACCESS_KEY = 'your-s3-access-key'","S3_SECRET_KEY = 'your-s3-secret-key'","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","s3 = boto3.client('s3',","                  region_name=S3_REGION,","                  aws_access_key_id=S3_ACCESS_KEY,","                  aws_secret_access_key=S3_SECRET_KEY)","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    image = request.files['image']","","    # Ensure a file is selected","    if image.filename == '':","        flash('No selected file', 'danger')","        return redirect(url_for('index'))","","    # Securely save the file locally","    filename = secure_filename(image.filename)","    image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))","","    # Upload file to S3","    try:","        s3.upload_file(os.path.join(app.config['UPLOAD_FOLDER'], filename), S3_BUCKET, filename)","        flash('File uploaded successfully', 'success')","    except ClientError as e:","        flash(f\"Error uploading file: {e}\", 'danger')","","    # Insert book into database","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price, image_url) VALUES (%s, %s, %s)\", (name, price, filename))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    ","    return redirect(url_for('index'))","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","        flash('Book deleted successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error deleting book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""],"id":116},{"start":{"row":0,"column":0},"end":{"row":100,"column":0},"action":"insert","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import pymysql","import boto3","from botocore.exceptions import ClientError","from werkzeug.utils import secure_filename","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS S3 details","S3_BUCKET = 'your-s3-bucket-name'","S3_REGION = 'your-s3-region'","S3_ACCESS_KEY = 'your-s3-access-key'","S3_SECRET_KEY = 'your-s3-secret-key'","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","s3 = boto3.client('s3',","                  region_name=S3_REGION,","                  aws_access_key_id=S3_ACCESS_KEY,","                  aws_secret_access_key=S3_SECRET_KEY)","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    image = request.files['image']","","    # Ensure a file is selected","    if image.filename == '':","        flash('No selected file', 'danger')","        return redirect(url_for('index'))","","    # Securely save the file locally","    filename = secure_filename(image.filename)","    image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))","","    # Upload file to S3","    try:","        s3.upload_file(os.path.join(app.config['UPLOAD_FOLDER'], filename), S3_BUCKET, filename)","        flash('File uploaded successfully', 'success')","    except ClientError as e:","        flash(f\"Error uploading file: {e}\", 'danger')","","    # Insert book into database","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price, image_url) VALUES (%s, %s, %s)\", (name, price, filename))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    ","    return redirect(url_for('index'))","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","        flash('Book deleted successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error deleting book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""]}],[{"start":{"row":48,"column":0},"end":{"row":82,"column":37},"action":"remove","lines":["@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    image = request.files['image']","","    # Ensure a file is selected","    if image.filename == '':","        flash('No selected file', 'danger')","        return redirect(url_for('index'))","","    # Securely save the file locally","    filename = secure_filename(image.filename)","    image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))","","    # Upload file to S3","    try:","        s3.upload_file(os.path.join(app.config['UPLOAD_FOLDER'], filename), S3_BUCKET, filename)","        flash('File uploaded successfully', 'success')","    except ClientError as e:","        flash(f\"Error uploading file: {e}\", 'danger')","","    # Insert book into database","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price, image_url) VALUES (%s, %s, %s)\", (name, price, filename))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    ","    return redirect(url_for('index'))"],"id":118},{"start":{"row":48,"column":0},"end":{"row":83,"column":0},"action":"insert","lines":["@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    image = request.files['image']","","    # Ensure a file is selected","    if image.filename == '':","        flash('No selected file', 'danger')","        return redirect(url_for('index'))","","    # Securely save the file locally","    filename = secure_filename(image.filename)","    image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))","","    # Upload file to S3","    try:","        s3.upload_file(os.path.join(app.config['UPLOAD_FOLDER'], filename), S3_BUCKET, filename)","        flash('File uploaded successfully', 'success')","    except ClientError as e:","        flash(f\"Error uploading file: {e}\", 'danger')","","    # Insert book into database","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price, image_url) VALUES (%s, %s, %s)\", (name, price, filename))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    ","    return redirect(url_for('index'))",""]}],[{"start":{"row":0,"column":0},"end":{"row":101,"column":0},"action":"remove","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import pymysql","import boto3","from botocore.exceptions import ClientError","from werkzeug.utils import secure_filename","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS S3 details","S3_BUCKET = 'your-s3-bucket-name'","S3_REGION = 'your-s3-region'","S3_ACCESS_KEY = 'your-s3-access-key'","S3_SECRET_KEY = 'your-s3-secret-key'","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","s3 = boto3.client('s3',","                  region_name=S3_REGION,","                  aws_access_key_id=S3_ACCESS_KEY,","                  aws_secret_access_key=S3_SECRET_KEY)","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    image = request.files['image']","","    # Ensure a file is selected","    if image.filename == '':","        flash('No selected file', 'danger')","        return redirect(url_for('index'))","","    # Securely save the file locally","    filename = secure_filename(image.filename)","    image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))","","    # Upload file to S3","    try:","        s3.upload_file(os.path.join(app.config['UPLOAD_FOLDER'], filename), S3_BUCKET, filename)","        flash('File uploaded successfully', 'success')","    except ClientError as e:","        flash(f\"Error uploading file: {e}\", 'danger')","","    # Insert book into database","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price, image_url) VALUES (%s, %s, %s)\", (name, price, filename))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    ","    return redirect(url_for('index'))","","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","        flash('Book deleted successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error deleting book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""],"id":119},{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["from flask import Flask","from routes import *","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""]}],[{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["from flask import Flask","from routes import *","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""],"id":120},{"start":{"row":0,"column":0},"end":{"row":100,"column":50},"action":"insert","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import pymysql","import boto3","from botocore.exceptions import ClientError","from werkzeug.utils import secure_filename","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS S3 details","S3_BUCKET = 'your-s3-bucket-name'","S3_REGION = 'your-s3-region'","S3_ACCESS_KEY = 'your-s3-access-key'","S3_SECRET_KEY = 'your-s3-secret-key'","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","s3 = boto3.client('s3',","                  region_name=S3_REGION,","                  aws_access_key_id=S3_ACCESS_KEY,","                  aws_secret_access_key=S3_SECRET_KEY)","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    image = request.files['image']","","    # Ensure a file is selected","    if image.filename == '':","        flash('No selected file', 'danger')","        return redirect(url_for('index'))","","    # Securely save the file locally","    filename = secure_filename(image.filename)","    image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))","","    # Upload file to S3","    try:","        s3.upload_file(os.path.join(app.config['UPLOAD_FOLDER'], filename), S3_BUCKET, filename)","        flash('File uploaded successfully', 'success')","    except ClientError as e:","        flash(f\"Error uploading file: {e}\", 'danger')","","    # Insert book into database","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price, image_url) VALUES (%s, %s, %s)\", (name, price, filename))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    ","    return redirect(url_for('index'))","","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","        flash('Book deleted successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error deleting book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')"]}],[{"start":{"row":0,"column":0},"end":{"row":100,"column":50},"action":"remove","lines":["from flask import Flask, render_template, request, redirect, url_for, flash","import pymysql","import boto3","from botocore.exceptions import ClientError","from werkzeug.utils import secure_filename","import os","","app = Flask(__name__)","app.secret_key = 'your_secret_key'  # Secret key for flashing messages","","# AWS S3 details","S3_BUCKET = 'your-s3-bucket-name'","S3_REGION = 'your-s3-region'","S3_ACCESS_KEY = 'your-s3-access-key'","S3_SECRET_KEY = 'your-s3-secret-key'","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","s3 = boto3.client('s3',","                  region_name=S3_REGION,","                  aws_access_key_id=S3_ACCESS_KEY,","                  aws_secret_access_key=S3_SECRET_KEY)","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    image = request.files['image']","","    # Ensure a file is selected","    if image.filename == '':","        flash('No selected file', 'danger')","        return redirect(url_for('index'))","","    # Securely save the file locally","    filename = secure_filename(image.filename)","    image.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))","","    # Upload file to S3","    try:","        s3.upload_file(os.path.join(app.config['UPLOAD_FOLDER'], filename), S3_BUCKET, filename)","        flash('File uploaded successfully', 'success')","    except ClientError as e:","        flash(f\"Error uploading file: {e}\", 'danger')","","    # Insert book into database","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price, image_url) VALUES (%s, %s, %s)\", (name, price, filename))","            connection.commit()","        flash('Book added successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error adding book: {e}\", 'danger')","    finally:","        connection.close()","    ","    return redirect(url_for('index'))","","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","        flash('Book deleted successfully!', 'success')","    except pymysql.MySQLError as e:","        flash(f\"Error deleting book: {e}\", 'danger')","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')"],"id":121},{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["from flask import Flask, render_template, request, redirect, url_for","import pymysql","","app = Flask(__name__)","","# Database connection details","endpoint = \"obs-database.c4v5xzujhxv5.us-east-1.rds.amazonaws.com\"","port = 3306","dbname = \"mydb\"","username = \"admin\"","password = \"Pa$$w0rd123\"","","def get_db_connection():","    return pymysql.connect(","        host=endpoint,","        user=username,","        password=password,","        database=dbname,","        port=port","    )","","@app.route('/')","def index():","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"SELECT * FROM book\")","            books = cursor.fetchall()","    finally:","        connection.close()","    return render_template('index.html', books=books)","","@app.route('/add', methods=['POST'])","def add_book():","    name = request.form['name']","    price = request.form['price']","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"INSERT INTO book (name, price) VALUES (%s, %s)\", (name, price))","            connection.commit()","    finally:","        connection.close()","    return redirect(url_for('index'))","","@app.route('/delete/<int:id>', methods=['POST'])","def delete_book(id):","    connection = get_db_connection()","    try:","        with connection.cursor() as cursor:","            cursor.execute(\"DELETE FROM book WHERE id = %s\", (id,))","            connection.commit()","    finally:","        connection.close()","    return redirect(url_for('index'))","","if __name__ == '__main__':","    app.run(debug=True, port=3000, host='0.0.0.0')",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":47,"column":36},"end":{"row":47,"column":36},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1720032500633,"hash":"c6582755a54c433d6e41384798bb56efda2a1f09"}